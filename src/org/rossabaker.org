#+PROPERTY: header-args :mkdirp yes
#+hugo_base_dir: ../../tmp/hugo
#+hugo_section: /
#+startup: logdone
#+export

* DONE Home page
CLOSED: [2022-09-05 Mon 00:30]
:PROPERTIES:
:EXPORT_FILE_NAME: _index
:EXPORT_HUGO_LASTMOD: <2022-11-01 Tue 22:51>
:END:

#+begin_src css :tangle ../../tmp/hugo/assets/css/cromulent.css :exports none
  .site-title {
      font-size: 2rem;
      text-align: center;
      margin: 0;
      padding: 0;
      background: none;
  }

  .site-title .heading-anchor {
      display: none;
  }

  .intro {
      display: grid;
      grid-template-columns: 30% 70%;
      gap: 1.5em;
      grid-auto-rows: auto;
  }

  .intro .profile {
      grid-column: 1;
      grid-row: 1;
      margin: 0;
  }

  .intro .profile figure {
      margin: 0;
  }

  .intro .profile img {
      max-width: 100%;
      border-radius: 50%;
  }

  .intro .text {
      grid-column: 2;
      grid-row: 1;
      align-self: center;
  }
#+end_src



* DONE Ross A. Baker                                    :@personal:biography:contact:
CLOSED: [2022-08-31 Wed 00:23]
:PROPERTIES:
:EXPORT_HUGO_SECTION: /
:EXPORT_FILE_NAME: about
:EXPORT_HUGO_LASTMOD: <2022-09-14 Wed 13:28>
:END:

#+begin_description
Ross A. Baker is an American software engineer who is not notable
enough for a Wikipedia article.  He's arguably not even notable enough
for this article on an eponymous domain.
#+end_description

#+begin_infobox
@@hugo:<h2>@@Ross A. Baker@@hugo:</h2>@@

#+attr_html: :alt Profile image of Ross A. Baker
[[../hugo/static/img/profile.jpg]]

- Name :: Ross A. Baker
- Occupation :: software engineer
- Style :: functional
- Pronouns :: [[https://pronoun.is/he][he/him]]
- Interjections :: ope
- Personality :: BBQ
- ~$EDITOR~ :: Emacs
- HTML tag :: ~<dl>~
- Number :: /e/
- Sandwich :: Italian beef, dipped
- MLB team :: Cubs
- NFL team :: Bears
- NHL team :: Blackhawks
- NBA team :: Pacers
- Disposition :: curmudgeonly
#+end_infobox

#+begin_src css :tangle ../../tmp/hugo/assets/css/cromulent.css :exports none
  .infobox {
      float: right;
      width: 18em;
      margin: 0 0 1.5em 1.5em;
      border: 1px solid #666;
      padding: 0.5em;
      background: #f8f8f8;
      font-size: 0.85em;
  }

  .infobox h2 {
      text-align: center;
      font-family: "Noto Sans", sans-serif;
      font-size: 1.25rem;
      margin: 0;
  }

  .infobox img {
      display: block;
      max-width: 100%;
      margin: 0 auto;
  }

  .infobox dl {
      display: inline-grid;
      grid-template-columns: max-content 1fr;
      column-gap: 1em;
      row-gap: 0.5em;
  }

  .infobox dt {
      font-weight: bolder;
      grid-column: 1;
  }

  .infobox dd {
      grid-column: 2;
      margin-left: 0;
  }
#+end_src

@@hugo:<div class="content">@@

*Ross A. Baker* (/​ɹɔs eɪ beɪ.kɚ/) is an American software engineer who
is not notable enough for a Wikipedia article.  He's arguably not even
notable enough for this article on an eponymous domain.

#+toc: headlines 2

** Early life

Baker grew up in [[https://en.wikipedia.org/wiki/Crystal_Lake,_Illinois][Crystal Lake]], [[https://en.wikipedia.org/wiki/Illinois][Illinois]].  He was gifted a copy of
[[https://archive.org/details/LearningBasicForTandyComputers][Learning BASIC for Tandy Computers]] by his aunt, and would enter and
then modify programs out of the back of [[https://en.wikipedia.org/wiki/3-2-1_Contact#Magazine][3-2-1 Contact Magazine]].  He
wanted to be a computer programmer or a Major League Baseball player,
but showed some aptitude for the former and absolutely none for the
latter.

In high school, he reverse engineered the roster format of [[https://en.wikipedia.org/wiki/Wayne_Gretzky_Hockey_2][Wayne
Gretzky Hockey 2]] and made a league simulator with rosters, drafts,
trades, and playoffs, in BASIC, and shared it with friends.  He hasn't
written anything that cool since.

** Education

Baker studied Computer Science and Cognitive Science at [[https://www.indiana.edu/][Indiana
University]], where he was recognized on campus as the guy who wore
shorts even in the dead of winter.  He captained the [[http://www.collegebowl.com/schoolhistoryrpt.asp?CustomerID=165][IU College Bowl
Team]] team to an abysmal [[http://www.collegebowl.com/schoolhistoryrpt.asp?CustomerID=165][2-13 record]] at the 1998 National Championship.

** Career

Baker has worked as a software engineer on school library circulation
systems, commercial insurance, mail-order music clubs, automobile
auctions, 340B compliance, cybersecurity, IP television, rewards
clubs, cloud infrastructure, and fintech.  He currently works as a
staff engineer with a heavy emphasis on mentoring.

He taught himself Scala and got deeply involved in Open Source and the
[[https://typelevel.org/][Typelevel]] ecosystem, where he serves on the Steering Committee.

Baker enjoys statistics, pairwise comparison, and various types of
sportsball.  He combined these interests to assist with the [[http://prwolfe.bol.ucla.edu/cfootball/][Wolfe
Ratings]] used by the Bowl Championship Series from 2001-2013.

** Controversies

*** 2005 World Series conspiracy theory

Baker believes, without evidence, that the 2005 World Series was
canceled due to lack of interest.  Some thought he'd let it go after
the Cubs won in 2016, but no.

** Personal life

Baker lives in [[https://en.wikipedia.org/wiki/Indianapolis][Indianapolis]], [[https://en.wikipedia.org/wiki/Indiana][Indiana]], with his wife, two children, two
dogs, cat, myriad freshwater fish, frogs, and invertebrates.  He
is a volunteer soccer coach at [[https://northsidesoccer.com/][Northside Soccer]] and active member of
[[https://northchurchindy.com/][North United Methodist Church]].  He cross-country skis when it's snowy
and jogs when it's not.

** See also

- [[*Contact][Contact info]]

#+begin_src css :tangle ../../tmp/hugo/assets/css/cromulent.css :exports none
  .contacts dl {
      display: grid;
      grid-template-columns: max-content auto;
  }

  dt {
      font-weight: bolder;
      grid-column: 1;
  }

  dd {
      grid-column: 2;
  }

  .ox-hugo-toc {
      background: #f8f8f8;
      border: 1px solid #666;
      font-size: 0.85em;
      padding: 1em;
      display: inline-block;
  }

  .ox-hugo-toc .heading {
      font-weight: bolder;
      text-align: center;
  }

  .ox-hugo-toc ul {
      counter-reset: toc-item;
      list-style: none;
      padding-left: 0;
  }
  .ox-hugo-toc li {
      display: block;
  }
  .ox-hugo-toc ul ul {
      padding-left: 4ch;
  }

  .ox-hugo-toc li::before {
      content: counters(toc-item, ".") " ";
      counter-increment: toc-item;
  }
#+end_src

@@hugo:</div>@@

* DONE Public keys              :@tech:keys:pgp:wkd:
CLOSED: [2022-09-14 Wed 13:30]
:PROPERTIES:
:EXPORT_HUGO_BUNDLE: public-keys
:EXPORT_FILE_NAME: index
:EXPORT_DESCRIPTION: Ross A. Baker's public keys
:EXPORT_HUGO_LASTMOD: <2022-11-03 Thu 12:09>
:END:
** PGP

# Create an armored version
#+begin_src sh :tangle ../../tmp/hugo/content/public-keys/0x975BE5BC29D92CA5.pub.asc :exports none
  gpg --enarmor <../keys/0x975BE5BC29D92CA5.pub.gpg
#+end_src

#+name: gpg-fingerprint
#+begin_src sh :results verbatim :exports none
  export GNUPGHOME=../../tmp/gnupg
  mkdir -p $GNUPGHOME
  gpg --show-keys ../keys/0x975BE5BC29D92CA5.pub.gpg
#+end_src

My public key is published to this domain via [[*Web Key Directory][WKD]], and can also be
downloaded in [[/.well-known/openpgpkey/hu/eimhw3om3jynrs7fo7r7rrssmt1o4yxp][binary]] and [[./0x975BE5BC29D92CA5.pub.asc][ASCII armored]] formats.  Its fingerprint is:

#+call: gpg-fingerprint()

I use this key for [[*Verification][verification]].

* DONE Contact                                            :@personal:contact:verification:keyoxide:
CLOSED: [2022-10-16 Sun 15:37]
:PROPERTIES:
:EXPORT_HUGO_SECTION: /
:EXPORT_FILE_NAME: contact
:EXPORT_DESCRIPTION: Supported ways to contact Ross, and deprecated ways to no longer contact Ross.
:EXPORT_HUGO_LASTMOD: <2022-11-03 Thu 12:11>
:END:

** Verification

Many of these identities can be verified via a [[https://keyoxide.org/wkd/ross%40rossabaker.com][Keyoxide profile]] based
on my [[*PGP][PGP key]].

** Supported

I will attempt to respond in a timely fashion to inquiries on any of these
channels.

#+begin_contacts
# Uses the [[*~contact-info-dl~ shortcode][~contact-info-dl~ shortcode]].  That's not great, if we ever export
# to non-Hugo targets.
@@hugo:{{< contact-info-dl support="supported" >}}@@
#+end_contacts

See my [[*Public keys][public keys]] for encryption options.

** Experimental

I'm not committed to any of these, but a critical mass of friends could make
these compelling.  Connect and say "hi" if you're so inclined.

#+begin_contacts
# Uses the [[*~contact-info-dl~ shortcode][~contact-info-dl~ shortcode]].  That's not great, if we ever export
# to non-Hugo targets.
@@hugo:{{< contact-info-dl support="experimental" >}}@@
#+end_contacts

** Deprecated

You might find me here, but my presence is special purpose or
vestigial, and I am unlikely to see or respond.

#+begin_contacts
# Uses the [[*~contact-info-dl~ shortcode][~contact-info-dl~ shortcode]].  That's not great, if we ever export
# to non-Hugo targets.
@@hugo:{{< contact-info-dl support="deprecated" >}}@@
#+end_contacts

* Configurations section                                              :@tech:
:PROPERTIES:
:EXPORT_HUGO_BUNDLE: configs
:END:

** Configurations
:PROPERTIES:
:EXPORT_FILE_NAME: _index
:EXPORT_HUGO_LASTMOD: <2022-09-05 Mon 23:48>
:END:

This is my attempt at [[https://en.wikipedia.org/wiki/Literate_programming][literate programming]].  The configurations
presented here run my apps, provision my systems, and build this
website.

These are intended to be living documents, revised whenever the
corresponding configuration is reconfigured.

** DONE Managing generated sources in Git :git:gitattributes:gitignore:babel:
CLOSED: [2022-08-24 Wed 15:04]
:PROPERTIES:
:EXPORT_FILE_NAME: managing-generated-sources-in-git
:EXPORT_HUGO_LASTMOD: <2022-09-18 Sun 00:18>
:EXPORT_OPTIONS: H:6
:END:

My [[https://github.com/rossabaker/cromulent][personal Git repository]] hosts my configurations and this web site.
Most of it is sourced from a single [[https://github.com/rossabaker/cromulent/blob/main/src/org/rossabaker.org][Org Mode file]], but most tools
don't read Org directly.  We need to commit some [[https://orgmode.org/manual/Extracting-Source-Code.html][tangled]] sources to
interoperate with various tools.  We must deal with three sorts of
files.
#+hugo:more

*** Original sources

This is the minimal set of files from which all other files can be
derived.  As much as possible, we keep them in ~src~.

*** Ephemeral files

Ephemeral files can be tangled on demand and disposed of at will.
Development processes may need them, but they can be comfortably
recreated from the original sources.  An example of these are the Hugo
outputs when [[*Local Nix build][locally building the site]].

We put as many of them as we can in ~tmp~ for organization.  The best
way to handle them is with a [[https://git-scm.com/docs/gitignore][gitignore]].

#+begin_src gitignore :tangle ../../.gitignore
  /tmp/
#+end_src

Nix builds create a ~result~ symlink by default that should laso be
ignored.

#+begin_src gitignore :tangle ../../.gitignore
  /result
#+end_src

*** Commited, generated sources

There are files that are neither original, nor can they be generated
on demand from originals.  This class of files is generally to be
avoided, but with the right mitigations, we can live with it and still
live in our Org Mode bubble within a world that isn't ready for it.

**** Location

Some files must be tangled to specific locations in the repository to
be loaded by other tools.  For example, Git looks for ~.gitignore~ and
in the project root.

Other files need to be tangled for non-Org tooling, but are imported
by something else.  The [[*Build website with Nix][Nix package for our website]], included in
~flake.nix~.  We stow all such files we can in the ~gen~ directory.

**** Problems and mitigations

***** Desycnhronization

The tangled source may be desynchronized with the Org Mode source.  We
could check for this with a GitHub workflow, but don't yet.

***** Bloated diffs

When we commit tangled sources, each hunk of the diff may be
duplicated between the original source and the tangled source.  This
is distracting in review.  We can set a gitattribute of [[https://git-scm.com/docs/gitattributes#_diff][~-diff~]], which
treats the specified file as binary.  It's a little white lie, but
it prevents repeating each hunk.

A second problem is that a larger diff has a larger surface area for
merge conflicts.  [[https://git-scm.com/docs/gitattributes#_merge][~-merge~]] avoids 3-way merges, but still flags the
file as a conflict.  Typically the file needs to be regenerated
in these cases.

Finally, seeting [[https://github.com/github/linguist/blob/97bc889ce840208652bf09b45f3b7859de43fe8e/docs/overrides.md#generated-code][~linguist-generated~]] suppresses these files from
rendered diffs.  It also excludes them from GitHub language stats.

We set all these gitattributes for all tangled sources.  The
~.gitattributes~ file itself gets gitattributes set on it!

#+begin_src gitattributes :tangle ../../.gitattributes
  gen/            -diff -merge linguist-generated=true
  .gitignore      -diff -merge linguist-generated=true
  .gitattributes  -diff -merge linguist-generated=true
#+end_src

** DONE Website bundle                                              :website:
CLOSED: [2022-08-24 Wed 15:04]
:PROPERTIES:
:EXPORT_HUGO_BUNDLE: website
:EXPORT_DESCRIPTION: A colophon for rossabaker.com.  Describes the way we convert an Org-Mode file into a website with ox-hugo and Nix.
:END:

*** Website
:PROPERTIES:
:EXPORT_FILE_NAME: _index
:EXPORT_TITLE: Website
:EXPORT_HUGO_LASTMOD: <2022-08-24 Wed 15:04>
:END:

[[https://rossabaker.com/][rossabaker.com]] is sourced from an Org file.  We [[https://orgmode.org/manual/Extracting-Source-Code.html][tangle]] the
configuration, export the content to Markdown with with [[https://ox-hugo.scripter.co][ox-hugo]], and
convert the Markdown to HTML with [[https://gohugo.io/][Hugo]].

*** DONE Site configuration                       :hugo:org_mode:ox_hugo:nix:
CLOSED: [2022-09-01 Thu 16:48]
:PROPERTIES:
:EXPORT_FILE_NAME: hugo
:EXPORT_HUGO_LASTMOD: <2022-11-03 Thu 00:20>
:END:

A Hugo site can be configured with either TOML or YAML.  I spent my
weirdness budget on a literate config, so let's stick to the default.
#+hugo:more
#+begin_src conf-toml :tangle ../../tmp/hugo/config.toml
  baseURL = 'https://rossabaker.com'
  languageCode = 'en-us'
  title = 'Ross A. Baker'
#+end_src

**** hugo-mwe

This site is bootstrapped from [[https://gitlab.com/hugo-mwe/hugo-mwe][Hugo MWE]].  A [[https://scripter.co/hugo-modules-importing-a-theme/][hugo module]] would be
easier, but I have not figured out a way to integrate Hugo modules
with [[https://github.com/tweag/gomod2nix][gomod2nix]].  Instead, we'll do it the old-fashioned way and clone
it into ~src/hugo/themes~.

~themesDir~ cannot be a module mount.

#+begin_src conf-toml :tangle ../../tmp/hugo/config.toml
  theme = 'hugo-mwe'
  themesDir = 'src/hugo/themes'
#+end_src

Further design comes from the [[*CSS foundation][CSS foundation]].

**** Mounts

Because all this org stuff mucks with the [[https://gohugo.io/getting-started/directory-structure/#readout][normal directory structure]],
we have to give Hugo a few extra hints.  [[https://github.com/gohugoio/hugo/issues/6457#issuecomment-546580193][~assetDir~ is "legacy"]], so
we'll use [[https://gohugo.io/hugo-modules/configuration/#module-config-mounts][module mounts]].

#+begin_src conf-toml :tangle ../../tmp/hugo/config.toml
  [[module.mounts]]
    source = 'tmp/hugo/layouts'
    target = 'layouts'
  [[module.mounts]]
    source = 'tmp/hugo/content'
    target = 'content'
  [[module.mounts]]
    source = 'tmp/hugo/assets'
    target = 'assets'
  [[module.mounts]]
    source = 'src/hugo/assets'
    target = 'assets'
  [[module.mounts]]
    source = 'src/hugo/static'
    target = 'static'
  [[module.mounts]]
    source = 'tmp/hugo/static'
    target = 'static'
#+end_src

**** General site parameters

The ~css~ parameter lets us add custom stylesheets to the asset
pipeline.  ~chroma.css~ is [[*Syntax highlighting][generated below]].

#+begin_src conf-toml :tangle ../../tmp/hugo/config.toml
  [Params]
    css = [ 'cromulent.css', 'chroma.css', 'noto-fonts.css', 'fork-awesome.css', 'ox-hugo.css' ]
    description = "A perfectly cromulent developer."
    username = 'rossabaker'

    [Params.source]
      url = "https://github.com/rossabaker/cromulent"
#+end_src

**** ox-hugo

ox-hugo [[https://ox-hugo.scripter.co/doc/goldmark/#enable-unsafe-html][recommends Goldmark]].  The ~unsafe~ is not as bad as it sounds:

#+begin_quote
While that setting sounds scary, all that does is allow have inline
HTML in your Markdown, as CommonMark allows!
#+end_quote

#+begin_src conf-toml :tangle ../../tmp/hugo/config.toml
  [markup.goldmark.renderer]
    unsafe = true
#+end_src

**** Syntax highlighting

The classless style is classless.

#+begin_src conf-toml :tangle ../../tmp/hugo/config.toml
  [markup.highlight]
    noClasses = false
#+end_src

Generate the ~chroma.css~ file.

#+name: chroma-css
#+begin_src sh :results verbatim
  hugo gen chromastyles --style=github
#+end_src

#+begin_src css :tangle ../../tmp/hugo/assets/css/chroma.css :noweb yes :exports none
  <<chroma-css()>>
#+end_src

*** DONE Templates                                                :hugo:html:
CLOSED: [2022-09-01 Thu 16:53]
:PROPERTIES:
:EXPORT_HUGO_BUNDLE: templates
:END:

**** DONE Index
CLOSED: [2022-09-02 Fri 11:28]
:PROPERTIES:
:EXPORT_FILE_NAME: _index
:EXPORT_TITLE: Templates
:END:

I've eschewed the [[https://themes.gohugo.io/][many community themes]] to lay everything out from
scratch.  I took over a decade off front ends and wanted to see what
I've missed.  If you have no such need, don't follow my footsteps.
There is a lot to unpack here.

**** DONE Base template
CLOSED: [2022-09-02 Fri 09:17]
:PROPERTIES:
:EXPORT_FILE_NAME: base-template
:END:

This [[https://gohugo.io/templates/base/][base template]] defines the outermost HTML for single pages and
lists alike.  Nothing here is extraordinary.  It is a simple
foundation for semantic HTML.  It specifies four blocks:
- [[*Head template][~head~]]
- [[*Header template][~header~]]
- ~main~
- [[*Footer template][~footer~]]
#+hugo:more
All but ~main~ provide a default value.  There is no notion of
"abstract" in a hugo template, so we can't enforce that every other
template provide a ~main~, but this is the expectation.

#+begin_src html :tangle ../../tmp/hugo/layouts/_default/baseof.html
  <!DOCTYPE html>
  <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="{{ site.Language.Lang }}" lang="{{ site.Language.Lang }}">
      <head>
          {{ block "head" . }}
              {{ partial "head" . }}
          {{ end }}
      </head>

      <body>
          <header>
              {{ block "header" . }}
                  {{ partial "header.html" . }}
              {{ end }}
          </header>

          <main>
              {{ block "main" . }}
              {{ end }}
          </main>

          <footer>
              {{ block "footer" . }}
                  {{ partial "footer.html" . }}
              {{ end }}
          </footer>
      </body>
  </html>
#+end_src

**** DONE Single-page template
CLOSED: [2022-09-02 Fri 12:53]
:PROPERTIES:
:EXPORT_FILE_NAME: single
:END:

Most pages on the site are "single pages".  These are generally the
subtrees in the [[https://github.com/rossabaker/cromulent/blob/main/src/org/rossabaker.org][source]] with ~EXPORT_FILE_NAME~ not equal to ~_index~.
Think of them as the articles.  Indeed, we mark them up in an
~<article>~ tag.
#+hugo:more

#+begin_src html :tangle ../../tmp/hugo/layouts/_default/single.html
  {{ define "main" }}
      <article>
          <header>
              <h1>{{ .Title }}</h1>
          </header>
          {{ .Content }}
          <footer>
              {{ partial "article-info" . }}
          </footer>
      </article>
  {{ end }}
#+end_src

Futher customization is possible by [[https://gohugo.io/content-management/types/][type]].  Certain types get their own
custom [[https://gohugo.io/content-management/front-matter/][front matter]], which we can render with a consistent look and feel.

I would like to define ~article-header~ and ~article-main~ blocks in
this template so less gets repeated in the section overrides.  I'm
still missing something.

**** DONE Home page template
CLOSED: [2022-10-12 Wed 00:05]
:PROPERTIES:
:EXPORT_FILE_NAME: home
:END:

The home page is rendered as a paginated list.  We want branch bundles,
so we have to exclude the home page, taxonomies, and terms from the
pages.

#+hugo:more

#+begin_src html :tangle ../../tmp/hugo/layouts/index.html
  {{ define "main" }}
      <h1 class="site-title">{{ .Site.Title }}</h1>
      {{ with .Content }}
          {{ . }}
      {{ end }}

      <article>
          <section class="recently-updated">
              <h2>Recently updated</h2>

              <ul class="article-summaries">
                  {{ $paginator := .Paginate (where site.Pages.ByLastmod.Reverse "Kind" "not in" (slice "home" "term" "taxonomy")) }}
                  {{ range $paginator.Pages }}
                      <li>
                          {{ partial "article-summary" . }}
                      </li>
                  {{ end}}
                  {{ template "_internal/pagination.html" . }}
              </ul>
          </section>
      </article>
  {{ end }}
#+end_src

#+begin_src css :tangle ../../tmp/hugo/assets/css/cromulent.css
  ul.pagination {
      list-style: none;
      margin: 0;
      padding: 0;
      display: inline;
  }

  ul.pagination li {
      display: inline;
  }
#+end_src

**** DONE Talks template                                                :css:
CLOSED: [2022-09-02 Fri 12:48]
:PROPERTIES:
:EXPORT_FILE_NAME: talks
:END:
c
Talks get their own single-page template based on custom front matter.
#+hugo:more

- ~.Venue~ :: Where the talk was delivered.  Supports markdown.  Protip:
  put it in quotes if it begins with a link.
- ~.Source~ :: The source repository associated with the talk.
- ~.Slides~ :: If it's a =*.pdf=, it's rendered as an ~<object>~.
  Otherwise, put it in an ~<iframe>~.  Make sure it links to content
  served over https, or it won't load.

Metadata appears in the article header.

#+begin_src html :tangle ../../tmp/hugo/layouts/talks/single.html
  {{ define "article-header" }}
      <h1>{{ .Title }}</h1>
      <dl>
          {{ if .Params.venue }}
              <dt>Venue</dt>
              <dd>{{ .Params.Venue | markdownify }}</dd>

              <dt>Source code</dt>
              <dd><a href="{{ .Params.Source }}">{{ .Params.Source }}</a></dd>
          {{ end }}
      </dl>
  {{ end }}
#+end_src

The content should be the abstract of the talk.  Slides are rendered
inline below.

#+begin_src html :tangle ../../tmp/hugo/layouts/talks/single.html
  {{ define "article-main" }}
      {{ .Content }}
      {{ if .Params.Slides }}
          <div class="slides">
              {{ if strings.HasSuffix .Params.Slides ".pdf" }}
                  <object data="{{ .Params.Slides | absURL }}" type="application/pdf">
                  </object>
              {{ else }}
                  <iframe src="{{ .Params.Slides | absURL }}">
                  </iframe>
              {{ end }}
          </div>
          <p>Download the <a href="{{ .Params.Slides | absURL }}">slides</a>.
      {{ end }}
  {{ end }}
#+end_src

This is approximately how Bootstrap styles an embed, and is optimized
for a 4x3 slide deck.  We're going to need something more
sophisticated eventually.

#+begin_src css :tangle ../../tmp/hugo/assets/css/cromulent.css
  .slides {
      position: relative;
  }
  .slides::before {
      content: "";
      display: block;
      padding-top: 78%;
  }
  .slides object, .slides iframe {
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      height: 100%;
      width: 100%;
  }
#+end_src

**** DONE List template
CLOSED: [2022-09-02 Fri 12:55]
:PROPERTIES:
:EXPORT_FILE_NAME: list
:END:

The list template renders for the home page, section listings,
taxonomies, and terms.  By default, we render our article summaries
in reverse order of modification.
#+hugo:more
#+begin_src html :tangle ../../tmp/hugo/layouts/_default/list.html
  {{ define "main" }}
      <article>
          {{ with .Content }}
              {{ . }}
          {{ end }}

          <section class="recently-updated">
              <h2>Recently updated</h2>

              <ul class="article-summaries">
                  {{ range .Pages.ByLastmod.Reverse }}
                      <li>
                          {{ partial "article-summary" . }}
                      </li>
                  {{ end}}
              </ul>
          </section>
      </article>
  {{ end }}
#+end_src

In case anything is floated in the content, clear it here.

#+begin_src css :tangle ../../tmp/hugo/assets/css/cromulent.css
  article .recently-updated {
      clear: both;
  }
#+end_src

**** DONE Taxonomy tag cloud              :taxonomy:tag_cloud:css:emacs_lisp:
CLOSED: [2022-09-02 Fri 13:07]
:PROPERTIES:
:EXPORT_FILE_NAME: terms
:END:

This is the taxonomy list page, which is rendered as a tag cloud.  We
use it for categories and tags.  Terms are rendered in a font
proportional to the logarithm of its page count.
#+hugo:more

The least-used term is assigned an importance between =0=.  The most
used term is assigned an importance of =6=.  Everything else falls in
between.  We choose a logarithm because we expect the distribution to
roughly follow a power law.

#+begin_src html :tangle ../../tmp/hugo/layouts/_default/terms.html
  {{ define "main" }}
      <h1>{{ .Name }}</h1>
      <ul class="terms {{.Name | urlize}}">
          {{ $plural := .Data.Plural }}
          {{ $max := math.Log (len (index .Data.Terms.ByCount 0).Pages) }}
          {{ range .Data.Terms.Alphabetical }}
              {{ $size := math.Floor (mul (div (math.Log (len .Pages)) $max) 6) }}
              <li>
                  <a href="/{{ $plural }}/{{ .Name }}" class="{{ printf "terms-size-%.0f" $size }}">{{ .Name }}</a>
                  <sub>{{ len .Pages }}</sub>
              </li>
          {{ end }}
      </ul>

      {{ with .Content }}
          {{ . }}
      {{ end }}
  {{ end }}
#+end_src

Creating font sizes for the CSS is boring.  Let's spit them out in Emacs Lisp!

#+name: terms-sizes-css
#+begin_src emacs-lisp
  (mapconcat (lambda (x)
               (let ((size (expt 2.0 (/ (- x 2) 4.0))))
                 (format ".terms-size-%i { font-size: %1.3fem; }" x size)))
             (number-sequence 0 6)
             "\n")
#+end_src

Look at all the CSS we didn't have to write:

#+begin_src css :tangle ../../tmp/hugo/assets/css/cromulent.css :noweb yes
  <<terms-sizes-css()>>
#+end_src

We still need to handwrite a bit.  This centers the ~.terms~ and
reserves enough line height for the largest:

#+begin_src css :tangle ../../tmp/hugo/assets/css/cromulent.css
  .terms {
      list-style: none;
      padding-left: 0;
      display: flex;
      flex-wrap: wrap;
      align-items: center;
      justify-content: center;
      line-height: 2.25em;
  }
#+end_src

The elements are a regular inline list:

#+begin_src css :tangle ../../tmp/hugo/assets/css/cromulent.css
  .terms li {
      display: inline;
      margin: 0 0.5rem;
  }
#+end_src

Our site convention is that tags receive a ~#~ prefix and categories
get a ~@~.  Give them a tasteful, muted style:

#+begin_src css :tangle ../../tmp/hugo/assets/css/cromulent.css
  .terms.tags li::before {
      content: "#";
  }
  .terms.categories li::before {
      content: "@";
  }
#+end_src

Mute the color and count, because it's all about the terms:

#+begin_src css :tangle ../../tmp/hugo/assets/css/cromulent.css
  .terms li {
      color: #aaa;
  }
#+end_src

**** DONE Taxonomy term template
CLOSED: [2022-09-02 Fri 13:10]
:PROPERTIES:
:EXPORT_FILE_NAME: term
:EXPORT_HUGO_LASTMOD: <2022-10-12 Wed 22:40>
:END:

Taxonomy terms (e.g., ~/categories/tech~) are rendered in a simple
template that lists the article summaries in reverse order of modification.
#+hugo:more
#+begin_src html :tangle ../../tmp/hugo/layouts/_default/term.html
  {{ define "main" }}
      <h1>{{ .Name }}</h1>

      {{ with .Content }}
          {{ . }}
      {{ end }}

      <ul class="article-summaries">
          {{ $paginator := .Paginate .Pages.ByLastmod.Reverse 10 }}
          {{ range $paginator.Pages }}
              <li>
                  {{ partial "article-summary" . }}
              </li>
          {{ end }}
          {{ template "_internal/pagination.html" . }}
      </ul>
  {{ end }}
#+end_src

**** DONE Head template
CLOSED: [2022-09-02 Fri 10:29]
:PROPERTIES:
:EXPORT_FILE_NAME: head
:END:

This template defines our default ~<head>~ element, and is not often
customized.  Most of it originated in [[https://gitlab.com/hugo-mwe/hugo-mwe][hugo-mwe]].
#+hugo:more
UTF-8 ought to be enough characters for anyone.

#+begin_src html :tangle ../../tmp/hugo/layouts/partials/head.html
  <meta charset="utf-8">
#+end_src

[[https://developer.mozilla.org/en-US/docs/Web/HTML/Viewport_meta_tag][Improve responsiveness]].

#+begin_src html :tangle ../../tmp/hugo/layouts/partials/head.html
  <meta name="viewport" content="width=device-width, initial-scale=1">
#+end_src

Set the title tag.  Always include the site title.

#+begin_src html :tangle ../../tmp/hugo/layouts/partials/head.html
  {{- if .IsHome }}
      <title>{{ site.Title }}</title>
  {{- else }}
      <title>{{ site.Title }}: {{ .Title }}</title>
  {{- end }}
#+end_src

Set the description, either at the site or page level.

#+begin_src html :tangle ../../tmp/hugo/layouts/partials/head.html
  {{ $description := cond .IsHome .Site.Params.Description .Params.Description }}
  {{ if $description }}
      <meta name="description" content="{{ $description }}">
  {{ end }}
#+end_src

Load our own CSS and JavaScript through the [[https://gohugo.io/hugo-pipes/introduction/][Hugo asset pipeline]].

#+begin_src html :tangle ../../tmp/hugo/layouts/partials/head.html
  {{ range $css_file := site.Params.css | default (slice "bmfw.css" "ox-hugo.css") }}
      {{ $css_asset_path := printf "css/%s" $css_file }}
      {{ $css := resources.Get $css_asset_path | minify | fingerprint }}
      <link rel="stylesheet" href="{{ $css.RelPermalink }}">
      <!-- Enable HTTP/2 Push -->
      <link rel="preload" href="{{ $css.RelPermalink }}" as="style">
  {{ end }}

  {{ range $js_file := site.Params.js }}
      {{ $js_asset_path := printf "js/%s" $js_file }}
      {{ $js := resources.Get $js_asset_path | minify | fingerprint }}
      <script defer src="{{ $js.RelPermalink }}"></script>
      <!-- Enable HTTP/2 Push -->
      <link rel="preload" href="{{ $js.RelPermalink }}" as="script">
  {{ end }}
#+end_src

Render our RSS feed.  Putting it in a ~<link>~ integrates with various
[[https://addons.mozilla.org/en-US/firefox/search/?q=rss][RSS readers]].

#+begin_src html :tangle ../../tmp/hugo/layouts/partials/head.html
  {{ range .AlternativeOutputFormats -}}
      {{ printf `<link rel="%s" type="%s" href="%s" title="%s" />` .Rel .MediaType.Type .Permalink (printf "%s for %s" (.Name | title) site.Title) | safeHTML }}
  {{ end -}}
#+end_src

**** DONE Article summary                                               :css:
CLOSED: [2022-09-02 Fri 13:12]
:PROPERTIES:
:EXPORT_FILE_NAME: article-summary
:EXPORT_HUGO_LASTMOD: <2022-09-04 Sun 21:12>
:END:

Provide a standard article summary for our various list templates.  It
includes the title, dates, category, tags, and either the page
description or summary.
#+hugo:more

#+begin_src html :tangle ../../tmp/hugo/layouts/partials/article-summary.html
  <article>
      <header>
          <h3><a href="{{ .Permalink }}">{{ .Title }}</a></h3>
      </header>
      {{ if .Description }}
          {{ .Description | markdownify }}
      {{ else if .Truncated }}
          {{ .Summary }}
      {{ else }}
          {{ .Content }}
      {{ end }}
      <footer>
        {{ partial "article-info" . }}
      </footer>
  </article>
#+end_src

A list of summaries should be unbulleted and separated by a thin line:

#+begin_src css :tangle ../../tmp/hugo/assets/css/cromulent.css
  ul.article-summaries {
      list-style: none;
      margin: 0;
      padding: 0;
  }

  ul.article-summaries > li {
      border-bottom: thin solid #999;
  }
#+end_src

**** DONE Article info                                                  :css:
CLOSED: [2022-09-02 Fri 13:16]
:PROPERTIES:
:EXPORT_FILE_NAME: article-info
:END:

Article info appears at the bottom of every article and article
summary on the site.  It describes:

- The content type
- The date
- The modification date
- The category, usually one, prefixed with ~@~
- The tags, usually many, prefixed with ~#~
#+hugo:more
~<dl>~ has long been my favorite idiosyncratic HTML tag.  Maybe I'm
abusing it here, but I like the result.

#+begin_src html :tangle ../../tmp/hugo/layouts/partials/article-info.html
  <div class="article-info">
      <dl>
          <div class="type">
              <dt>Type</dt>
              {{ if ne .Type "page" }}
                  <dd><a href="{{ .Type | relURL }}">{{ .Type | singularize | humanize }}</a></dd>
              {{ else }}
                  <dd>Page</dd>
              {{ end }}
          </div>
          <div class="published">
              <dt>Published</dt>
              <dd>{{ dateFormat "2006-01-02" .Date }}</dd>
          </div>
          <div class="last-modified">
              <dt>Last updated</dt>
              <dd>{{ dateFormat "2006-01-02" .Lastmod }}</dd>
          </div>
          <div class="taxonomies">
              <dt>Taxonomies</dt>
              <dd>
                  <dl>
                      {{ if .Params.categories }}
                          <dt>Categories</dt>
                          <dd>
                              <ul>
                                  {{ range (sort .Params.categories) }}
                                      <li class="category"><a href="{{ (print "/categories/" .) | absURL }}">{{ . | humanize }}</a></li>
                                  {{ end }}
                              </ul>
                          </dd>
                      {{ end }}

                      {{ if .Params.tags }}
                          <dt>Tags</dt>
                          <dd>
                              <ul>
                                  {{ range (sort .Params.tags) }}
                                      <li class="tag"><a href="{{ (print "/tags/" .) | absURL }}">{{ . }}</a></li>
                                  {{ end }}
                              </ul>
                          </dd>
                      {{ end }}
                  </dl>
              </dd>
          </div>
      </dl>
  </div>
#+end_src

CSS.  Lunch hour is almost over, so I'll describe it another day.

#+begin_src css :tangle ../../tmp/hugo/assets/css/cromulent.css
  .article-info {
      margin: 1em 0;
      font-size: 0.816em;
  }

  .article-info .type dt {
      display: none;
  }

  .article-info .type dd {
      display: inline;
      margin-left: 0;
  }

  .article-info .type, .article-info .published, .article-info .last-modified {
      display: inline-flex;
  }

  .published dt, .article-info .last-modified dt {
      display: inline;
      font-weight: normal;
      text-transform: lowercase;
      color: #999;
      margin-right: 1ch;
  }

  .article-info .published dt, .article-info .last-modified dt {
      display: inline;
      font-weight: normal;
      text-transform: lowercase;
      color: #999;
      margin-right: 1ch;
  }

  .article-info .published dd, .article-info .last-modified dd {
      display: inline;
      margin-left: 0;
      margin-right: 1ch;
  }

  .article-info .taxonomies > dt {
      display: none;
  }

  .article-info .taxonomies dd dl dt {
      display: none;
  }

  .article-info .taxonomies dd {
      margin-left: 0;
  }

  .article-info .taxonomies dd dl dd {
      display: inline;
  }

  .article-info .taxonomies dd dl dd ul {
      list-style: none;
      margin: 0;
      padding: 0;
      display: inline;
  }

  .article-info .taxonomies dd dl dd li {
      display: inline;
  }

  .article-info .taxonomies dd dl dd li.category::before {
      content: '@';
      color: #666;
  }

  .article-info .taxonomies dd dl dd li.tag::before {
      content: '#';
      margin-left: 1ch;
      color: #666;
  }

  .article-info a {
      text-decoration: none;
  }
#+end_src

**** DONE Header template                                    :css:emacs_lisp:
CLOSED: [2022-09-02 Fri 11:41]
:PROPERTIES:
:EXPORT_FILE_NAME: header
:EXPORT_HUGO_LASTMOD: <2022-09-13 Tue 22:13>
:END:

Our header is straightforward semantic HTML, with a ~<h1>~, ~<p>~,
~<nav>~, etc.  It establishes the brand, and my brand is to be a
complete dweeb.  Therefore, we're going to abuse CSS to render it as
an Emacs Lisp definition.
#+hugo:more

***** HTML

We reference a ~username~ site parameter, because my full name doesn't
make any sense as a Lisp variable.

#+begin_src html :tangle ../../tmp/hugo/layouts/partials/header.html
  <strong><a href="{{ "/" | relURL }}">{{ .Site.Params.username }}</a></strong>
  <p>{{ .Site.Params.description }}</p>
  <nav>
      <ul>
          {{ range .Site.Menus.main }}
              <li><a href="{{ .URL }}">{{ .Name | urlize }}</a></li>
          {{ end }}
      </ul>
  </nav>
#+end_src

***** Configuration

The menu is defined in the site config.  Higher weights come last.

#+begin_src conf-toml :tangle ../../tmp/hugo/config.toml
  [[menu.main]]
  name = 'About'
  url = '/about'
  weight = 1

  [[menu.main]]
  name = 'Blog'
  url = '/blog'
  weight = 100

  [[menu.main]]
  name = 'Talks'
  url = '/talks'
  weight = 120

  [[menu.main]]
  name = 'Projects'
  url = '/projects'
  weight = 130

  [[menu.main]]
  name = 'Configs'
  url = '/configs'
  weight = 140

  [[menu.main]]
  name = 'Categories'
  url = '/categories'
  weight = 500

  [[menu.main]]
  name = 'Tags'
  url = '/tags'
  weight = 510
#+end_src

***** CSS

It's monospace, because it's "code".

#+begin_src css :tangle ../../tmp/hugo/assets/css/cromulent.css
  body > header {
      font-family: "Noto Sans Mono", monospace;
  }
#+end_src

Render each element as a flex:

Introduce the Lisp syntax as CSS content.  The double paren on the
last child is sloppy, but I haven't figured out another way to hug it.

#+begin_src css :tangle ../../tmp/hugo/assets/css/cromulent.css
  body > header strong::before {
      content: "(defvar ";
  }
  body > header p::before {
      content: "\"";
  }
  body > header p::after {
      content: "\"";
  }
  body > header nav::before {
      content: "'(";
  }
  body > header > nav > ul > li:last-child::after {
      content: "))";
      white-space: nowrap;
  }
#+end_src

Mute all the frou-frou.

#+begin_src css :tangle ../../tmp/hugo/assets/css/cromulent.css
  body > header::before, body > header::after,
  body > header ::before, body > header ::after {
      font-weight: normal; 
      white-space: pre-wrap;
  }
#+end_src

~M-x indent-region~:

#+begin_src css :tangle ../../tmp/hugo/assets/css/cromulent.css
  body > header :first-child {
      padding-left: 0;
  }

  body > header > * {
      padding-left: 2ch;
  }
#+end_src

It's fine and good that the header is bold, but otherwise we want it
to look like the rest.

#+begin_src css :tangle ../../tmp/hugo/assets/css/cromulent.css
  body > header strong {
      font-size: 1em;
      line-height: inherit;
      margin: 0;
      font-family: "Noto Sans Mono", monospace;
  }
#+end_src

The site subtitle becomes our "docstring".

#+begin_src css :tangle ../../tmp/hugo/assets/css/cromulent.css
  body > header p {
      margin: 0;
      font-style: italic;
  }
#+end_src

Setting ~display: inline-flex~ on the nav indents things properly in
the quoted list, even across multiple lines.

#+begin_src css :tangle ../../tmp/hugo/assets/css/cromulent.css
  body > header > nav {
      display: inline-flex;
  }
#+end_src

The ~ul~ is also ~inline-flex~, to eat the whitespace in the HTML and
let ~li~ set their own padding.  ~flex-wrap~ breaks it across lines
on narrow viewports.

#+begin_src css :tangle ../../tmp/hugo/assets/css/cromulent.css
  body > header ul {
      display: inline-flex;
      flex-wrap: wrap;
      list-style: none;
      margin: 0;
  }
#+end_src

Render the HTML list as a Lispy, inline list.

#+begin_src css :tangle ../../tmp/hugo/assets/css/cromulent.css
  body > header li {
      display: inline;
  }
  body > header li {
      padding-right: 1ch;
  }
  body > header li:last-child {
      padding-right: 0;
  }
#+end_src

**** DONE Footer template
CLOSED: [2022-09-02 Fri 10:35]
:PROPERTIES:
:EXPORT_FILE_NAME: footer
:EXPORT_HUGO_LASTMOD: <2022-09-12 Mon 23:02>
:END:

The footer is a simple ~<address>~ with our name, pronouns, and
socials.  Our social links will use the [[https://microformats.org/wiki/rel-me][rel-me microformat]] for
verification.
#+hugo:more

#+begin_src html :tangle ../../tmp/hugo/layouts/partials/footer.html
  <address>
      Ross A. Baker
      <a href="https://pronoun.is/he">(he/him)</a>
      {{ partial "contact-info-icons" . }}
  </address>
#+end_src

#+begin_src css :tangle ../../tmp/hugo/assets/css/cromulent.css
  address {
      display: inline-block;
  }

  address ul {
      display: inline-block;
      list-style-type: none;
      margin: 0;
      padding-left: 0;
  }

  address li {
      display: inline;
      margin-left: 1ch;
  }
#+end_src

**** DONE Heading rendering
CLOSED: [2022-09-04 Sun 17:50]
:PROPERTIES:
:EXPORT_FILE_NAME: heading-renderer
:EXPORT_HUGO_LASTMOD: <2022-09-21 Wed 11:45>
:END:

We [[https://gohugo.io/templates/render-hooks][hook]] into the heading renderer to generate anchor targets for subheadings.
#+hugo:more
Note that these only work for markdown headings.  Headings created in
our other layouts do not get these for free.

***** HTML

Put this file in =layouts/_default/_markup/render-heading.html=:

#+begin_src html :tangle ../../tmp/hugo/layouts/_default/_markup/render-heading.html
  <h{{ .Level }} id="{{ .Anchor | safeURL }}">
      {{ .Text | safeHTML }}
      <a class="heading-anchor" href="#{{ .Anchor | safeURL }}">#</a>
  </h{{ .Level }}>
#+end_src

***** CSS

Mute the header anchors until hover:

#+begin_src css :tangle ../../tmp/hugo/assets/css/cromulent.css
  .heading-anchor {
      color: #ccc;
      text-decoration: none;
  }
  a.heading-anchor:hover {
      color: #00f;
  }
#+end_src

**** DONE Contact info templates
CLOSED: [2022-09-12 Mon 22:11]
:PROPERTIES:
:EXPORT_FILE_NAME: contact-info
:EXPORT_HUGO_LASTMOD: <2022-10-28 Fri 11:37>
:END:

Contact info is rendered in two places: in the [[*Footer template][footer template]] and on the
[[*Ross A. Baker][about page]].  They share a common definition.
#+hugo:more
***** Site parameters

We'll store the contacts in the site parameters of ~config.toml~.

Keys are:
- ~network~ :: required
- ~icon~ :: required when ~support~ equals ~'supported'~.  Defaults to ~network~.
- ~handle~ :: required when ~support~ equals ~'supported'~.
- ~url~ :: required when ~support~ equals ~'supported'~.
- ~support~ :: should be one of
  - ~'supported'~
  - ~'experimental'~
  - ~'deprecated'~

#+begin_src conf-toml :tangle ../../tmp/hugo/config.toml
  [[Params.contacts]]
  network = 'Email'
  icon = 'envelope-o'
  handle = 'ross@rossabaker.com'
  url = 'mailto:ross@rossabaker.com'
  support = 'supported'

  [[Params.contacts]]
  network = 'GitHub'
  handle = '@rossabaker'
  url = 'https://github.com/rossabaker'
  support = 'supported'

  [[Params.contacts]]
  network = 'Matrix'
  icon = 'matrix-org'
  handle = '@ross:rossabaker.com'
  url = 'https://matrix.to/#/@ross:rossabaker.com'
  support = 'supported'

  [[Params.contacts]]
  network = 'Mastodon'
  handle = '@rossabaker@indieweb.social'
  url = 'https://indieweb.social/@rossabaker'
  support = 'supported'

  [[Params.contacts]]
  network = 'Codeberg'
  handle = '@rossabaker'
  url = 'https://codeberg.org/rossabaker'
  support = 'experimental'

  [[Params.contacts]]
  network = 'Cohost'
  handle = '@rossabaker'
  url = 'https://cohost.org/rossabaker'
  support = 'experimental'

  [[Params.contacts]]
  network = 'Reddit'
  handle = 'u/rossabaker'
  url = 'https://reddit.com/user/rossabaker'
  support = 'experimental'

  [[Params.contacts]]
  network = 'Discord'
  support = 'deprecated'

  [[Params.contacts]]
  network = 'Facebook'
  support = 'deprecated'

  [[Params.contacts]]
  network = 'GitLab'
  support = 'deprecated'

  [[Params.contacts]]
  network = 'Gitter'
  support = 'deprecated'

  [[Params.contacts]]
  network = 'Instagram'
  support = 'deprecated'

  [[Params.contacts]]
  network = 'Keybase'
  support = 'deprecated'

  [[Params.contacts]]
  network = 'LinkedIn'
  support = 'deprecated'

  [[Params.contacts]]
  network = 'Signal'
  support = 'deprecated'

  [[Params.contacts]]
  network = 'Twitch'
  support = 'deprecated'

  [[Params.contacts]]
  network = 'Twitter'
  handle = '@rossabaker'
  url = 'https://twitter.com/rossabaker'
  support = 'deprecated'

  [[Params.contacts]]
  network = 'YouTube'
  support = 'deprecated'
#+end_src

***** ~contact-info-icons~ partial template

#+begin_src html :tangle ../../tmp/hugo/layouts/partials/contact-info-icons.html
  <ul>
      {{ range where .Site.Params.contacts "support" "eq" "supported" }}
          <li><a href="{{ .url }}" {{ with (findRE "^https?://" .url 1) }}rel="me"{{ end }}><span class="fa fa-{{ .icon | default (.network | urlize) }}"></span></a></li>
      {{ end }}
  </ul>
#+end_src

***** ~contact-info-dl~ shortcode

~contact-info-dl~ renders all the contacts in a simple definition
list.  It filters by a `support` parameter, so we can separate the
supported contacts from the experimental ones.

#+begin_src html :tangle ../../tmp/hugo/layouts/shortcodes/contact-info-dl.html
  <dl>
      {{ range where .Site.Params.contacts "support" "eq" (.Get "support") }}
          <dt>{{ .network }}</dt>
          {{ if .handle }}
              <dd>
              {{ if .url }}
                <a href="{{ .url }}">{{ .handle }}</a>
              {{ else }}
                {{ .handle }}
              {{ end }}
              </dd>
          {{ end }}
      {{ end }}
  </dl>
#+end_src

*** DONE Build website with Nix                      :hugo:ox_hugo:nix:babel:
CLOSED: [2022-09-01 Thu 16:54]
:PROPERTIES:
:EXPORT_FILE_NAME: build
:EXPORT_HUGO_LASTMOD: <2022-11-02 Wed 16:10>
:END:

The website is just another package in our flake.
#+hugo:more
#+begin_src nix :tangle ../../gen/website/default.nix
  { src, emacsNativeComp, gnupg, hugo, stdenv }:

  let
    siteEmacs = emacsNativeComp.pkgs.withPackages (epkgs: [
      epkgs.ox-hugo
    ]);
  in
  stdenv.mkDerivation rec {
    name = "rossabaker.com";
    inherit src;
    buildInputs = [
      siteEmacs
      gnupg
      hugo
    ];
    buildPhase = ''
      cd ..
      export PATH=${gnupg}/bin:$PATH
      ${siteEmacs}/bin/emacs -Q --batch --script ${./export.el}
      ${hugo}/bin/hugo --config tmp/hugo/config.toml
    '';
    installPhase = ''
      mkdir $out
      cp -r public/. $out
    '';
  }
#+end_src

~export.el~ is a small Emacs script that finds the Org file and
exports its contents with ox-hugo.

#+begin_src emacs-lisp :tangle ../../gen/website/export.el
  (require 'ox-hugo)
  (require 'ob-shell)

  (put 'org-hugo-external-file-extensions-allowed-for-copying 'safe-local-variable 'listp)
  (find-file "src/org/rossabaker.org")
  (setq org-confirm-babel-evaluate nil)
  (org-babel-tangle)
  (mkdir "../../tmp/hugo/static")
  (org-hugo-export-wim-to-md t)
#+end_src

**** Local Nix build

To build the site locally into ~./result~, run:

#+begin_src sh :tangle no
  nix build .#website
#+end_src

**** Development

For a more iterative experience with live reload in the browser, try:

#+begin_src sh :tangle no
  hugo serve --disableFastRender --config tmp/hugo/config.toml
#+end_src

**** Git ignores

Our build creates some detritus that we don't want checked into Git.

#+begin_src gitignore :tangle ../../.gitignore
  /tmp/hugo/
  /.hugo_build.lock
#+end_src

*** DONE CSS foundation                               :css:google_fonts:noto:
CLOSED: [2022-08-30 Tue 14:26]
:PROPERTIES:
:EXPORT_FILE_NAME: style
:EXPORT_HUGO_LASTMOD: <2022-11-03 Thu 00:27>
:END:

We strive for [[https://en.wikipedia.org/wiki/Semantic_HTML][semantic HTML]].  The styles presented here provide a
solid foundation, independent of the [[https://gohugo.io/hugo-modules/theme-components/][Hugo theme]], or even the choice to
use Hugo at all.  These rules are presently deployed to rossabaker.com,
but could conceivably be used in future projects.
#+hugo:more

**** Box sizing

[[https://developer.mozilla.org/en-US/docs/Web/CSS/box-sizing][~border-box~]] includes the widths of the border and padding in the
width of an element.  This cuts out a lot of ~<div class="container">~
nonsense.

#+begin_src css :tangle ../../tmp/hugo/assets/css/cromulent.css
  *, *::before, *::after {
      box-sizing: border-box;
  }
#+end_src

**** Let the body breathe

The [[https://www.w3.org/TR/WCAG22/#visual-presentation][Web Content Accessibility Guidelines]] call for a line height of at
least 1.5.

There are more criteria there that are probably worth revisting.

#+begin_src css :tangle ../../tmp/hugo/assets/css/cromulent.css
  body {
      line-height: 1.6;
  }
#+end_src

**** Fonts

The [[https://en.wikipedia.org/wiki/Noto_fonts][Noto fonts]] look nice and have a full glyph set.

+We serve them up with [[https://fonts.google.com/][Google Fonts]] with these links in our ~<head>~+.
Google Fonts [[https://cookie-script.com/blog/google-fonts-and-gdpr][violates the GDPR]], so we self host.  I downloaded all the
Noto variants from Google Fonts, and ran them through [[https://transfonter.org/][Transfonter]].

#+begin_src css :tangle ../../tmp/hugo/assets/css/cromulent.css
  html {
      font-family: "Noto Sans", sans-serif;
  }

  h1, h2, h3, h4, h5, h6 {
      font-family: "Noto Serif", serif;
  }

  code, kbd, pre, samp, var {
      font-family: "Noto Sans Mono", monospace;
  }
#+end_src

**** Responsive width

Lots of people use media queries for this, but the clamp function
gives a smooth experience as the window resizes.

#+begin_src css :tangle ../../tmp/hugo/assets/css/cromulent.css
  body {
      width: clamp(10em, 100%, 70em);
      padding: 0;
      margin: 0 auto;
  }
#+end_src

**** A splash of color

My beloved Indiana Hoosiers wear [[https://www.thedailyhoosier.com/did-you-know-indianas-iconic-candy-stripes-didnt-originate-in-the-basketball-program/][candy-striped pants]].  So shall this website.

#+begin_quote
We will fight for
the cream and crimson,
for the glory of old IU
#+end_quote

***** Palette

Define some CSS variables. The link color is complementary to the
crimson.

#+begin_src css :tangle ../../tmp/hugo/assets/css/cromulent.css
  :root {
      --color-brand: #9d2235;
      --color-brand-darker: #731927;
      --color-stripe: #ffffff;
      --link-color: #229d8a;
  }
#+end_src

***** Headers

Modern CSS lets us draw stripes without a repeating background GIF.
Neat.  This draws candy stripes next to the ~h1~.  The negative margin
and corresponding padding hang the stripes off to the left.

#+begin_src css :tangle ../../tmp/hugo/assets/css/cromulent.css
    h1 {
        background: linear-gradient(
            to right,
            var(--color-brand) 0,
            var(--color-brand) 2px,
            var(--color-stripe) 2px,
            var(--color-stripe) 4px,
            var(--color-brand) 4px,
            var(--color-brand) 6px,
            var(--color-stripe) 6px,
            var(--color-stripe) 8px,
            var(--color-brand) 8px,
            var(--color-brand) 10px,
            var(--color-stripe) 10px,
            var(--color-stripe) 12px,
            var(--color-brand) 12px,
            var(--color-brand) 14px,
            var(--color-stripe) 14px
        );
        margin-left: -24px;
        padding-left: 24px;
    }
#+end_src

We need to leave space for the negative margin.

#+begin_src css :tangle ../../tmp/hugo/assets/css/cromulent.css
  body > * {
      padding: 1.5rem 24px;
  }
#+end_src

Changing the headers to crimson helps tie it to the decorative
stripes.

#+begin_src css :tangle ../../tmp/hugo/assets/css/cromulent.css
  h1, h2, h3, h4, h5, h6 {
      color: var(--color-brand);
  }
#+end_src

We'll sort out header sizes later, but the ~h1~ really needs to be
bigger now.

#+begin_src css :tangle ../../tmp/hugo/assets/css/cromulent.css
  h1 {
      font-size: 2em;
  }
#+end_src

***** Links

Render the links in the complementary color.

#+begin_src css :tangle ../../tmp/hugo/assets/css/cromulent.css
  a {
      color: var(--link-color);
  }
#+end_src

*** Code rendering

Put a scroll bar on code samples, but only where necessary.

#+begin_src css :tangle ../../tmp/hugo/assets/css/cromulent.css
  pre {
      max-width: 100%;
      overflow-x: auto;
  }
#+end_src

Give the code samples a little more room to breathe.

#+begin_src css :tangle ../../tmp/hugo/assets/css/cromulent.css
  pre {
      background: #f8f8f8;
      border: 1px dotted #ccc;
      border-radius: 1em;
      padding: 1em;
  }
#+end_src

** DONE Web Key Directory                            :pgp:gnupg:wkd:indieweb:hugo:netlify:
CLOSED: [2022-11-02 Wed 23:39]
:PROPERTIES:
:EXPORT_FILE_NAME: web-key-directory
:EXPORT_HUGO_LASTMOD: <2022-11-03 Thu 00:30>
:END:

#+begin_description
Walks through publishing a public key with the Web Key Directory (WKD) protocol.
#+end_description

[[https://datatracker.ietf.org/doc/draft-koch-openpgp-webkey-service/][Web Key Directory (WKD)]] is a standard to look up the PGP keys by email
address over HTTPS.

It also fits nicely with Indieweb principles: we remove the dependency
on a third-party key server and are discoverable through
self-publishing.

*** Files

Most of the work is serving two static files.  On a Hugo site, the
correct place to put these is in the ~static/~ directory.

**** ~/.well-known/openpgpkey/policy~

There are [[https://www.ietf.org/archive/id/draft-koch-openpgp-webkey-service-14.html#name-policy-flags][options]], but in basic usage, all we need to do is serve a
blank file.

#+begin_src sh :noweb yes
  touch static/.well-known/openpgpkey/policy
#+end_src

#+name: write-empty-policy
#+begin_src emacs-lisp :exports none
  (mkdir "../../tmp/hugo/static/.well-known/openpgpkey/" t)
  (write-region "" nil "../../tmp/hugo/static/.well-known/openpgpkey/policy")
#+end_src

#+call: write-empty-policy()

**** ~/.well-known/openpgpkey/hu/:hash~

The key is stored at hash of the local part of the username.
Calculate with ~gpg-wks-client~.  Alternatively, KeyOxide has a [[https://keyoxide.org/util/wkd][web
implementation]].

#+name: calculate-wkd-hash
#+begin_src sh :cache yes
  gpg-wks-client --print-wkd-hash ross@rossabaker.com | awk '{print $1}'
#+end_src

In my case, the full path is:

#+begin_src text :noweb yes
  /.well-known/openpgpkey/hu/<<calculate-wkd-hash()>>
#+end_src

Export your key, unarmored, to be served in that file.

#+begin_src sh :noweb yes
  gpg --export ross@rossabaker.com > static/.well-known/openpgpkey/hu/<<calculate-wkd-hash()>>
#+end_src

# This actually does it for
#+name: export-gpg-key
#+begin_src emacs-lisp :exports none :noweb yes
  (mkdir "../../tmp/hugo/static/.well-known/openpgpkey/hu" t)
  (copy-file "../keys/0x975BE5BC29D92CA5.pub.gpg"
             "../../tmp/hugo/static/.well-known/openpgpkey/hu/<<calculate-wkd-hash()>>"
             t)
#+end_src

#+call: export-gpg-key()

*** Headers

These resources should allow cross-origin requests from any domain.
We deploy to Netlify, and can [[https://docs.netlify.com/configure-builds/file-based-configuration/#headers][configure this in netlify.toml]].

#+begin_src conf-toml :tangle ../../tmp/hugo/content/netlify.toml
  [[headers]]
    for = "/.well-known/openpgpkey/*"
    [headers.values]
      Access-Control-Allow-Origin = "*"
#+end_src

*** Testing

Test your work with ~gks-web-client~:

#+begin_src sh
  gpg-wks-client -v --check ross@rossabaker.com
#+end_src

You should see something like this:

#+begin_example
gpg-wks-client: public key for 'ross@rossabaker.com' found via WKD
gpg-wks-client: gpg: Total number processed: 1
gpg-wks-client: fingerprint: 904C153733DBB0106915C0BD975BE5BC29D92CA5
gpg-wks-client:     user-id: Ross A. Baker <ross@rossabaker.com>
gpg-wks-client:     created: Tue Jan 30 22:24:27 2018 EST
gpg-wks-client:   addr-spec: ross@rossabaker.com
#+end_example

Alternatively, there is an [[https://metacode.biz/openpgp/web-key-directory][online checker]].

* Projects section
:PROPERTIES:
:EXPORT_HUGO_BUNDLE: projects
:END:
** Projects
:PROPERTIES:
:EXPORT_FILE_NAME: _index
:END:
** DONE Personal Weather Station             :@personal:weather:indianapolis:
CLOSED: [2022-08-28 Sun 21:03]
:PROPERTIES:
:EXPORT_FILE_NAME: personal-weather-station
:EXPORT_DESCRIPTION: Data from my personal weather station in Indianapolis, Indiana.
:EXPORT_HUGO_LASTMOD: <2022-09-07 Wed 00:00>
:END:

I run an [[https://ambientweather.net/][Ambient Weather]] WS-1400-IP weather station in the Castleton
neighborhood of Indianapolis and share its [[https://ambientweather.net/devices/public/b78b5bb0e59646a78a623a940937335c][public dashboard]].  The
anemometer is not raised high enough for accuracy, but the rest is
reasonably accurate.

#+begin_aside
I learned on 2022-09-06 that the [[https://www.ind.com/business/general-aviation-airports/metropolitan-airport][Indianapolis Metropolitan Airport]] is
now [[https://aviationweather.gov/metar/data?ids=kump&format=decoded&hours=24&taf=off&layout=on][publishing METAR data]].  That airport is just a mile away, and
certainly has a more credible weather station, but it's fun to compare
to mine.
#+end_aside

#+begin_export html
  <iframe class="weather-station" src="https://ambientweather.net/devices/public/b78b5bb0e59646a78a623a940937335c?embed=true"></iframe>
#+end_export

#+begin_src css :tangle ../../tmp/hugo/assets/css/cromulent.css :exports none
  .weather-station {
      width: 500px;
      height: 400px;
      max-width: 100%;
      display: block;
      margin: 1.5em auto;
  }
#+end_src

** Books                                                               :book:

*** Scalatra in Action                :@tech:scala:scalatra:http:sbt:scalate:
:PROPERTIES:
:EXPORT_FILE_NAME: scalatra-in-action
:EXPORT_DATE: <2016-05-23 Mon>
:EXPORT_HUGO_PUBLISHDATE: <2022-08-30 Tue 22:44>
:END:

[[https://www.manning.com/books/scalatra-in-action][Scalatra in Action]] was written by [[https://constructiveproof.com/][Dave Hrycyszyn,]] Stefan Ollinger, and
me and covers the [[https://scalatra.org/][Scalatra micro-framework]] in depth.  Scalatra is a
port of Ruby's Sinatra to Scala.

#+hugo:more

#+attr_html: :alt Scalatra in Action book cover :class scalatra-in-action
[[https://www.manning.com/books/scalatra-in-action][file:../hugo/static/img/scalatra-in-action.jpg]]

From the publisher:

#+begin_quote
_Scalatra in Action_ covers the Scalatra framework in its entirety,
starting with concepts such as request routing, input handling,
actions, and HTTP responses. For readers who don't already know Scala,
the book introduces the Scala language and sbt, the Simple Build
Tool. You'll learn how to use Scalatra's powerful templating engine,
Scalate. It also covers advanced topics such as data access, handling
heavy load, asynchronicity, securing your application, designing
RESTful APIs, and real-time web programming.
#+end_quote

#+begin_src css :tangle ../../tmp/hugo/assets/css/cromulent.css :exports none
  figure.scalatra-in-action {
      margin: 0 auto;
      max-width: 360px;
      max-height: 452px
  }

  .scalatra-in-action {
      display: block;
      width: auto;
      height: auto;
      margin: 0 auto;
  }
#+end_src

* Talks section
:PROPERTIES:
:EXPORT_HUGO_BUNDLE: talks
:END:

** Talks
:PROPERTIES:
:EXPORT_FILE_NAME: _index
:END:
** IndyScala                                          :@tech:scala:indyscala:
*** Akka IO and Netty                                            :akka:netty:
:PROPERTIES:
:EXPORT_FILE_NAME: akka-io-and-netty
:EXPORT_DATE: <2013-11-04 Mon>
:EXPORT_PUBLISH_DATE: <2022-08-29 Mon 13:20>
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :venue "[IndyScala](http://indyscala.org/) at [E-gineering](https://e-gineering.com), November 2013"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :source https://github.com/indyscala/akka-io-demo
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :slides /pdf/akka-io-and-netty.pdf
:END:
*** Algebras in Scala                                               :algebra:
:PROPERTIES:
:EXPORT_FILE_NAME: algebras-in-scala
:EXPORT_DATE: <2019-12-02 Mon>
:EXPORT_PUBLISH_DATE: <2022-08-30 Tue 14:51>
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :venue "[IndyScala](http://indyscala.org/) at [E-gineering](https://e-gineering.com), December 2019"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :source https://github.com/indyscala/algebras
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :slides https://indyscala.org/algebras
:END:

Scala developers like to talk about "algebras".  Or when they're
feeling particularly precious, "algebrae."  Ross gives an overview,
and promises any references to "F-algebra" are not a taunt about your
ninth grade report card.
*** Anorm                                                         :anorm:sql:
:PROPERTIES:
:EXPORT_FILE_NAME: anorm
:EXPORT_DATE: <2012-08-13 Mon>
:EXPORT_PUBLISH_DATE: <202d2-08-30 Tue 21:56>
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :venue "[IndyScala](http://indyscala.org/), August 2012"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :source https://github.com/indyscala-anorm/
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :slides pdf/anorm.pdf
:END:

** Podcasts section                                                 :podcast:
:PROPERTIES:
:EXPORT_HUGO_BUNDLE: podcasts
:END:
*** Podcasts
:PROPERTIES:
:EXPORT_FILE_NAME: _index
:END:
*** CoRecursive Episode #017 :@tech:corecursive:scala:http4s:functional_programming:remote_work:
:PROPERTIES:
:EXPORT_FILE_NAME: corecursive-17
:EXPORT_DATE: <2018-07-27 Fri>
:EXPORT_HUGO_PUBLISHDATE: <2022-08-29 Mon 00:10>
:END:

I was interviewed by Adam Gordon Bell on the [[https://corecursive.com/017-http4s-with-ross-baker/][CoRecursive podcast]].
#+hugo:more

#+begin_quote
The promise of functional programming is code that is easier to reason
about, test and maintain. Referential transparency means there is no
extra context to worry about, we can just focus on inputs and
outputs. Examples of functional programming in the small are
plentiful. Fibonacci is easy to write as a function but what about fp
in the large?

Http4s is a web framework written in scala that takes a pure
functional approach to building http services. Ross Baker is a
contributor to http4s and he explains the benefits of this
approach. We also touch on the benefits of working remotely, since he
and I have both been doing it for some time.
#+end_quote

*** The Scala Logs                   :@tech:http4s:haskell:hockey:scala_logs:
:PROPERTIES:
:EXPORT_FILE_NAME: scala-logs
:EXPORT_DATE: <2020-02-08 Sat>
:EXPORT_HUGO_PUBLISHDATE: <2022-08-29 Mon 00:09>
:END:

It was my honor to join Zach McCoy on the [[https://open.spotify.com/episode/57RHzk5M7gJjLnV5nfehJo][first full episode of The
Scala Logs]], where we talked http4s, Haskell, and hockey.

* Blog section
:PROPERTIES:
:EXPORT_HUGO_BUNDLE: blog
:END:
** Blog
:PROPERTIES:
:EXPORT_FILE_NAME: _index
:END:
** TODO The AOL of the 2020s :@tech:community:gitter:discord:slack:open_web:aol:
:PROPERTIES:
:EXPORT_FILE_NAME: the-aol-of-the-2020s
:END:

#+begin_aside
This is an edited version of a draft that circulated in February, 2022.
#+end_aside

*** Maybe it's good that I started behind a wall

My online life began in 1995, in AOL's walled garden of chat.  It was
mostly a wasteland of "[[https://en.wikipedia.org/wiki/Age/sex/location][a/s/l]]", but there was ample opportunity for
serious discussion.  I could practice German, with native speakers,
from Middle America!
#+hugo:more
I was not yet a serious person.  With a naughty phrasebook and
sophomoric wit, my friend and I carefully transcribed, "/Hat dir Jemand ins
Gehirn geschissen und vergessen umzurühren?/"[fn:3].  We were abruptly
disconnected and banned.

*** First frolics on the open web

I dusted myself off and ventured onto the public internet.  It was
marvelous.  I learned about the web setting up [[http://www.scriptarchive.com/wwwboard.html][Matt's Script Archive]]
and talking to others on their boards.  We made [[https://en.wikipedia.org/wiki/Webring][web rings]] and
organized ourselves through web directories like [[https://en.wikipedia.org/wiki/DMOZ][dmoz]].  A succession
of search engines began indexing the Web for us, while other services
like [[http://www.searchengineshowdown.com/usenet/deja/][DejaNews]] crawled [[https://en.wikipedia.org/wiki/Usenet][Usenet]].  The golden eras of mailing lists and
blogs came and went, each contributing to the digital commons.

*** The rise and fall of Gitter

In the mid-2010s, [[https://gitter.im/][Gitter]] chat became an important hub for developers.
To this day, its archives serve as a primary source.  Most original
[[https://github.com/typelevel/cats][Cats]] authors have moved on, but we can [[https://gitter.im/typelevel/cats/archives/2015/01/29][observe its Big Bang]].  There
are years of insights there, referenced from the issue trackers and
indexed by Google.  These archives are admittedly precarious — none of
us pay for their upkeep — but it was an open product for an Open Web.

The Gitter UX grew derelict, and many OSS projects withdrew to gated
communities like Discord and Slack.  These apps are fine for
fellowship, but come at an unbearable cost to the project's history
and discoverability.  Questions recur, but the search engines no
longer reference the answers.  Prospective members who have the right
keywords fail to connect with their kindred spirits.  These closed
platforms are the AOL of the 2020s, and are anathema to Open Source.

*** Recommitment to the open web

I have many niche interests, and I'm not attempting to maximize my
following.  I want my efforts to reverberate.

- My current role involves a lot of teaching.  We use Slack,
  which is fair game in private enterprise, but I will expound
  what I can on this [[*Blog][nascent blog]].

- I am slowly republishing my old [[*Talks][talks]] here, with a couple new ones
  to share.

- I will continue to explore [[https://indieweb.social/@rossabaker][Mastodon]] for conversing on technical
  subjects.  You need a login to participate, but not to view.

- [[https://matrix.to/#/@ross:rossabaker.com][Matrix]] is the natural, open successor to Gitter.  I've drastically
  curtailed my chatting, but you might nerdsnipe me into a public room
  there.

# TODO absoulte link, because bundle names can't be tag names

- I challenge you to contribute back to the open web.  [[/configs/website][My setup]] is
  arcane, but it's documented and I've recaptured some Joy of
  Computing in building it.  Find yours.

- /Ich werde nicht vergessen umzurühren.[fn:5]/

*** See also

- Alexandru Nedelcu touches on similar subjects in [[https://alexn.org/blog/2022/04/09/scala-gitter-discord-mistake/][Scala's Gitter to
  Discord migration mistake]].

** DONE Running up the score in Scrabble           :@personal:grandma:eulogy:
CLOSED: [2022-09-12 Mon 00:32]
:PROPERTIES:
:EXPORT_FILE_NAME: running-up-the-score-in-scrabble
:END:

#+begin_aside
  My grandmother recently passed away.  A lightly edited version of
  this was read at her memorial service.
#+end_aside

Grandma and I had a tradition of playing Scrabble.  We used her
vintage set.  It still had score pads with games featuring players
further up the family tree.  It was intimidating.  I feared I might
draw a "þ" or "æ", just like Chaucer used to play.  But it was indeed
the Modern English Alphabet Edition.  True to her meticulous nature,
it retained all its original pieces.
#+hugo:more
She won the first several matches.  One time, having sealed another
victory, she remained hunched over the rack, running up the score on
her own grandson.  "Really, Grandma?"  She explained that
it's not worth doing if it's not worth your best.  She also pointed
out I lost when I hung a vowel too close to the triple word score.

Her blood runs in my veins, which means I am also stubborn.  I vowed
to beat her.  I read a strategy book.  When we met again, no more long
words.  Trench warfare!  Both scores were low, but she was prepared.
She was always prepared.  She put me away with a "jo."

"It's a Scottish sweetheart," she said.

"Isn't that a foreign word?" I protested.

"She's been playing that one for years," my aunt sighed.  We didn't
have the official Scrabble Dictionary, but still bitter, I checked
[[https://scrabble.hasbro.com/en-us/tools#dictionary][hasbro.com's dictionary]] this week.  Grandma was right, you know.

She came to one of my softball games.  I didn't play well, but she
asked if I played my best.  She realized that I would not succeed Ryne
Sandberg as the Cubs' second baseman a couple years before I did.  It
was my best.

Another time, she asked me about a poor grade.  "To whom much is
given, much is expected," she said.  I didn't recognize the scriptural
reference[fn:1] at the time, but those words from her faith still hit
me like a truck.  It wasn't my best.  I had disappointed her.

She gave me more tips than I ever got from that Scrabble book.
Eventually, I beat her.  I never got the consistent upper hand in our
series, but she made me better, in so many ways.  She was a gifted
teacher and motivator, and her calling was to bring out the best in
all of us.

All games come to an end.  After 97 years, Grandma played her last
tile, and I can imagine her at the Pearly Gates to tally the final
score.  "I say, hand me the top of the box, would you?" she surely
told St. Peter.  "I want to look at the rules!"  She was such a
stickler for the rules.  But not to worry, Grandma: you /always/ did
your best.

** DONE Imperfectly Indieweb :@personal:indieweb:juvenilia:facebook:twitter:perfectionism:ageing:
CLOSED: <2022-11-01 Tue 23:17>
:PROPERTIES:
:EXPORT_HUGO_BUNDLE: imperfectly-indieweb
:EXPORT_FILE_NAME: index
:EXPORT_HUGO_LASTMOD: <2022-11-02 Wed 00:00>
:END:

#+begin_description
How the collapse of Twitter and a trip to the Wayback Machine inspired me to go all in on the Indieweb.
#+end_description

#+begin_aside
Updated <2022-11-02 Wed>: some edits for concision
#+end_aside

The [[https://en.wikipedia.org/wiki/Acquisition_of_Twitter_by_Elon_Musk][asteroid hurtling toward Twitter last week]] forced many of us to
look back on our digital lives.  I reflected on my mistakes with
perfectionism and proprietorship, and am looking to Indieweb for
solutions.
*** Portrait of 1990s geekery

#+attr_html: :alt A partially exposed dinosaur fossil :class blog-image
#+caption: [[https://www.flickr.com/photos/nh53/48240721726/in/photolist-2guSiTu-6LsL5L-2k4wB2k-2kcQJkE-2kcLVom-a6svVS-2kcRaCQ-a6q81g-TSWgq4-a6pU5B-7uRNYN-Kb9qkv-TSWgR4-a6pJFD-TSWgMr-a6q8VD-4Lo9uM-a6pFEc-a6sSfC-TSWgCP-7VojVq-ffkmNN-a6sNAj-a6pGnz-a6pQpD-a6pwBi-a6pybc-SN3MTY-U1VuuE-TSWgUR-a6pZgv-SH3igV-a6q3sx-a6sWjq-a6spgJ-SQN6kA-a6p7Ux-a6sbff-a6shtU-REqDbZ-a6s9iN-a6pbgz-a6sQ7W-a6seeh-a6pivn-2kcQLgt-a6peYF-a6pNVe-2k6mwCq-a6pkaT][Dinosaur fossil]] by [[https://www.flickr.com/photos/nh53/][Nigel Holt]], licensed under [[https://creativecommons.org/licenses/by/2.0/][CC BY 2.0]]
[[file:img/dinosaur_fossil.jpg]]

The Wayback Machine has preserved my [[https://web.archive.org/web/19981203135416/http://user.mc.net/%7Eotis/][juvenilia]].  The soft tissue is
gone, but here is the skeleton of a twentieth-century personal web
page, the author not yet twenty.  There was a Perl CGI script to show
football schedules.  Navigation was a Java applet, for crude
animations that JavaScript could not yet render.  There was a boast
about my girlfriend[fn:4].  Ugh, the justified margins!

Unfortunately, it was all hosted at the internet service provider in
the back of the video cassette rental store.  It's incredible we found
any remains of Teenage Ross.

*** A gap in the fossil record

As the 21st Century dawned, the Web and I each got serious.  It was
time to put the applets away and drop the handle "Spanky"[fn:6].  I
had swirling thoughts about:
- aspect-oriented programming
- pairwise comparison algorihthms to rank intercollegiate athletic teams
- the inadequecy of ID3 tags for organizing a large MP3 collection
- the urgency of proportional representation
- and so much more

I was also reading too many blogs about blogging, and concluded that
none of these thoughts where polished enough to contribute to my
Personal Brand™.  I didn't develop a brand at all.  Vicenarian Ross
was lost to perfectionism.

*** Social media siloes

In 2008, I was cajoled into joining Facebook, and I resumed expressing
myself in its [[https://www.spudart.org/blog/new-art-monday-pieces-flair/][Pieces of Flair]] app.  I'd show you my board, but it's
not mine to share.  It's gone forever, unless Mark Zuckerberg elects
to hang it on the walls of his Metaverse.

A few months later, I joined Twitter.  I tweeted about 9,500 times,
and you can read them all there today.  Will we be able to read them
in 25 years?  Doubtful.  I downloaded my archive before I left, and I
might rerecord the greatest hits, but the original masters belong to
the label.

Facebook and Twitter got me creating again, worry free, in chunks of
10 kilopixels or 280 words.  But if these tech giants seem mighty, so
did the video rental business with the 56kbps dial-up.  Tricenarian
Ross is buried in the rubble.

*** Under Construction

#+attr_html: :alt A pixelated, animated GIF from the 1990s of a construction worker shoveling. :class blog-image
#+caption: Under construction
[[file:img/under-construction.gif]]

I'm embracing imperfection and reconstructing myself on the [[https://indieweb.org/][Indieweb]].
I've been in fiddling with the [[/website][site tooling]] for weeks before
announcing a grand opening, but that's a stall tactic: there is no
perfect.  Platforms like Medium and Substack remove the distractions,
but preserve nothing.

So, I am finally [[*Blog][blogging]] here, in my own domain.  I'm assembling an
archive of old [[*Talks][talks]].  I'll have more literate [[*Configurations][configurations]] to
share.  I'm thinking about how integrate the old tweets and the new
toots[fn:9].

I cringed while revisiting my old self, but I quickly appreciated the
ways I've grown.  If I get it right, this project will preserve
Quadragenarian Ross as an embarrassment for decades to come.[fn:8]

#+begin_src css :tangle ../../tmp/hugo/assets/css/cromulent.css :exports none
  figure.blog-image {
      float: right;
      max-width: 40%;
      margin: 0 1.5em;
  }

  .blog-image img {
      display: block;
      width: 100%;
      height: auto;
      margin: 0 auto;
  }

  .blog-image figcaption {
      font-size: smaller;
  }

  .footnotes {
      clear: both;
  }
#+end_src

** DONE Computers are fun again :@personal:indieweb:fediverse:twitter:community:scala:open_source:
CLOSED: [2022-11-04 Fri 01:09]
:PROPERTIES:
:EXPORT_FILE_NAME: computers-are-fun-again
:END:

#+begin_description
Just a week of detox on the Fediverse brought back all the excitement
of being new on the Internet.
#+end_description

I [[https://twitter.com/rossabaker/status/1585794629529501698][suspended my Twitter]] a week ago today, barely beating rush hour as
~#twexit~ traffic clogged the Information Superhighway.  Today I
exuberated, "[[https://indieweb.social/@rossabaker/109280455333589492][Computers are fun again!]]"

*** Open Source is more than code

For a decade, my online identity has been Scala.  A full community
pathology is best left to another post, but ever since its good parts
[[https://typelevel.org/blog/2021/05/05/discord-migration.html][retreated to Fort Discord]], I have felt adrift.  Open Source is focused
on the license of the code, but it's not (yet) something materalized
from a GPT-3 model.  It springs forth from human collaboration.  That
human history is a complementary and equally valuable artifact, and
deserves more care.

I still enjoy the language.  There are still good people in it.  I
teach it at work to wonderful mentees and still contribute to its
libraries.  But something is missing.

*** A serendipitous blog

Twitter became my primary connection to the tech community.  I wrapped
myself in a mute bubble, but maintaining its community accounts was
corrosive.  Alexandru Nedelcu's [[https://alexn.org/blog/2022/04/01/blogging/][return to blogging]] was fresh as
Twitter destabilized, the right words at the right time.  I decided
then I would follow his lead, even though I'm now months behind.

As I prepared, I discovered the concept of the Indieweb.  Yes!
Gitter, the former chat home of Scala, was public, but it was never
ours.  My Twitter was never mine.  But these people get it.

#+begin_quote
When you post something on the web, it should belong to you, not a
corporation.

#+begin_cite
[[https://indieweb.org/]]
#+end_cite
#+end_quote

*** Choosing an instance

I had been off and on Mastodon since April 2017[fn:10], but never with
this seriousness.  It was time for a move from "the default instance."

The obvious choice is [[https://fosstodon.org/about/more][Fosstodon]], where I have many friends and subject
matter expertise.  Its [[https://hub.fosstodon.org/why-fosstodon-is-english-only/][English-only policy]], while understandable, gave
me pause.  Un dia me gustaria in meiner zweiten und dritten Sprache
tuten.[fn:11] I'm glad it's there, but it's not right for me.

Then I found [[https://indieweb.social/web/home][indieweb.social]].  It's a little less aligned with my
established interests, but it has the nutrients that Scala currently
lacks.  The Indieweb supports the human side of Open Source.  I am
already enriched by the community I've discovered here.  There's even
one intrepid soul trying out my blogging apparatus.

*** What's next

There's a certain irony in putting content on an domain containing
~indieweb~, whose plug could be pulled at any moment.  I'm thinking
about the best way to integrate microblogging into this static site
generator.

I'm also [[https://www.patreon.com/indiewebsocial/about][supporting my friendly admin]].  Wherever you land in the
Fediverse, please consider supporting yours.

* Local Variables :noexport:

* Stashed

** Old home page copy
I came online a little after [[https://en.wikipedia.org/wiki/Eternal_September][The September That Never Ended]], but long
before [[https://en.wikipedia.org/wiki/Web_2.0][Web 2.0]].  I don't feel that old, but my internet age is in the
99th percentile[fn:2].  Analysts rate my curmudgeonhood even
higher.

I still love the ideals of the Open Web, but we are goaded by siloed
apps, follower counts, reaction emoji, and chum boxes.  Today, there
are so many more cool things to discuss, billions more to discuss them
with, and such dreadful mediums we've built to discuss them in.

This project hopes to bring the old wonder to the modern Web.  It
hosts an experiment in [[*Configurations][literate configuration]] and an [[*Blog][inchoate blog]].
Archives of my [[*Talks][talks]], [[*Projects][projects]], [[*Podcasts][podcasts]], and [[*Books][books]] are under
construction.  I suggest the [[/categories][categories]] (coarse) or [[/tags][tags]] (fine) to
zoom in on shared interests.

I hope you find something here to enjoy, and I hope it inspires you to
contribute to the open web, too.

* Footnotes

[fn:1]
#+begin_quote
From everyone to whom much has been given, much will be required, and from the one to whom much has been entrusted, even more will be demanded.

#+begin_cite
Luke 12:48, NRSV-UE
#+end_cite
#+end_quote

[fn:2] 36 million users online in December 1996, vs. 5,473 million in July 2022, per [[https://www.internetworldstats.com/emarketing.htm][Internet World Stats]].

[fn:3] Did someone shit in your brain and forget to stir?

[fn:4] Good news: she's now my wife.

[fn:5] I won't forget to stir.

[fn:6] I can't remember where I got that appellation.  I am old, but
I'm not Little Rascals old.

[fn:7] Most of my Scala friends joined in April 2017, and I can't
remember what we fled from.  Can anybody else?

[fn:8] Also I hope anyone still understands "cringe" is also a verb.

[fn:9] And what we'll think "toots" were in 2050

[fn:10] Most of my Scala follows joined that month, and I can't remember why.  Does anyone else?

[fn:11] "One day I'd like to toot in my second and third languages," in Spanish and German.
