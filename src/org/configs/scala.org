#+title: Scala home-manager module
#+created: [2023-05-09 Tue 09:27]
#+last_modified: [2023-06-22 Thu 23:44 EDT]
#+property: header-args :tangle-mode (identity #o444) :mkdirp yes
#+property: header-args:nix :tangle ../../../gen/scala/default.nix

This configuration provides a module to [[https://nix-community.github.io/home-manager/][Home Manager]].  It sets up a
global SBT, a few plugins, and some gitignores relevant to Scala.

* Sonatype credentials
:PROPERTIES:
:CUSTOM_ID: sonatype-credentials
:END:

This tells sbt where to look for our [[https://central.sonatype.org/publish/publish-guide/][Sonatype]] credentials.

#+begin_src scala :tangle ../../../gen/scala/sonatype.sbt
  credentials += Credentials(Path.userHome / ".sbt" / "sonatype-credentials.properties")
#+end_src

This will not work until a ~~/.sbt/sonatype-credentials.properties~
file is added.  Add the password yourself:

#+begin_src conf-javaprop
  realm=Sonatype Nexus Repository Manager
  host=oss.sonatype.org
  user=rossabaker
  password=???
#+end_src

* SBT Plugins
:PROPERTIES:
:CUSTOM_ID: sbt-plugins
:END:

** sbt-rewarn
:PROPERTIES:
:CUSTOM_ID: sbt-rewarn
:END:

[[https://github.com/rtimush/sbt-rewarn][sbt-rewarn]] preserves warnings across incremental compilations.

#+begin_src scala :tangle ../../../gen/scala/sbt-rewarn.sbt
  addSbtPlugin("com.timushev.sbt" % "sbt-rewarn" % "0.1.3")
#+end_src

** sbt-updates
:PROPERTIES:
:CUSTOM_ID: sbt-updates
:END:

[[https://github.com/rtimush/sbt-updates][sbt-updates]] shows available updates to library and plugin
dependencies.  [[https://github.com/scala-steward-org/scala-steward][Scala Steward]] takes care of this on many modern
projects, but it's still handy for local checking.

#+begin_src scala :tangle ../../../gen/scala/sbt-updates.sbt
  addSbtPlugin("com.timushev.sbt" % "sbt-updates" % "0.6.1")
#+end_src

** Dependency graphs
:PROPERTIES:
:CUSTOM_ID: dependency-graphs
:END:

The venerable sbt-dependency-graph was [[https://www.scala-sbt.org/1.x/docs/sbt-1.4-Release-Notes.html#sbt-dependency-graph+is+in-sourced][insourced to sbt-1.4.0]].  It
comes with a ~MiniDependencyTreePlugin~ out of the box, but we want
the fully caffeinated version.

This is available starting in 1.4.0, but it causes scala-xml eviction
madness up until 1.8.0.

#+begin_src scala :tangle ../../../gen/scala/dependency-tree.sbt
  libraryDependencies ++= (
    if (VersionNumber(sbtVersion.value).matchesSemVer(SemanticSelector(">=1.8"))) {
      Seq(
        Defaults.sbtPluginExtra(
          ModuleID("org.scala-sbt", "sbt-dependency-tree", sbtVersion.value),
          sbtBinaryVersion.value,
          scalaBinaryVersion.value
        )
      )
    } else Seq.empty
  )
#+end_src

** Dependency submission
:PROPERTIES:
:CUSTOM_ID: dependency-submission
:END:

[[https://github.com/scalacenter/sbt-dependency-submission][sbt-dependency-submission]] integrates with GitHub's [[https://docs.github.com/en/code-security/supply-chain-security/understanding-your-software-supply-chain/using-the-dependency-submission-api][Dependency
Submission API]] to enable reporting and vulnerability scanning.  It
is typically run as a GitHub Action, but it is not always apparent why
a dependency is submitted.  By installing the SBT plugin globally, we
can call ~show githubDependencyManifest~ and get a dump of the case
class model and find out which SBT configuration it exists in and what
depended on it.  It sees things that ~whatDependsOn~ does not.

#+begin_src scala :tangle ../../../gen/scala/sbt-dependency-submission.sbt
  addSbtPlugin("ch.epfl.scala" % "sbt-github-dependency-submission" % "2.1.2")
#+end_src

* Flake module
:PROPERTIES:
:CUSTOM_ID: flake-module
:END:

The Home Manager module is published to my flake as output
~homeManagerModules.scala~.

#+begin_src nix
  { moduleWithSystem, ... }: {
    flake.homeManagerModules.scala = moduleWithSystem(
      perSystem@{ pkgs }: {
	home.file = {
	  ".sbt/1.0/sonatype.sbt".source = ./sonatype.sbt;
          ".sbt/1.0/plugins/sbt-dependency-submission.sbt".source = ./sbt-dependency-submission.sbt;
	  ".sbt/1.0/plugins/sbt-rewarn.sbt".source = ./sbt-rewarn.sbt;
	  ".sbt/1.0/plugins/sbt-updates.sbt".source = ./sbt-updates.sbt;
	  ".sbt/1.0/plugins/dependency-tree.sbt".source = ./dependency-tree.sbt;
	};

	home.packages = [
	  (pkgs.sbt.override { jre = pkgs.jdk17; })
	  (pkgs.scala-cli.override { jre = pkgs.jdk17; })
	];

	programs.git = {
	  ignores = [
	    ".bloop/"
	    ".bsp/"
	    ".metals/"
	    "metals.sbt"
	  ];
	};
      }
    );
  }
#+end_src
