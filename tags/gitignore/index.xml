<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gitignore on Ross A. Baker</title>
    <link>https://rossabaker.com/tags/gitignore/</link>
    <description>Recent content in gitignore on Ross A. Baker</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 09 May 2023 09:27:00 +0000</lastBuildDate>
    <atom:link href="https://rossabaker.com/tags/gitignore/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Scala configuration</title>
      <link>https://rossabaker.com/configs/scala/</link>
      <pubDate>Tue, 09 May 2023 09:27:00 +0000</pubDate>
      <guid>https://rossabaker.com/configs/scala/</guid>
      <description>This configuration provides a module to Home Manager. It sets up a global SBT, a few plugins, and some gitignores relevant to Scala.&#xA;Sonatype credentials # This tells sbt where to look for our Sonatype credentials.&#xA;CC0-1.0&#xA;credentials += Credentials(Path.userHome / &amp;#34;.sbt&amp;#34; / &amp;#34;sonatype-credentials.properties&amp;#34;) Code Snippet 1: ~/.sbt/1.0/sonatype.sbt This will not work until a credentials file is added:&#xA;realm=Sonatype Nexus Repository Manager host=oss.sonatype.org user=&amp;lt;&amp;lt;username&amp;gt;&amp;gt; password=&amp;lt;&amp;lt;password&amp;gt;&amp;gt; Code Snippet 1: ~/.sbt/sonatype-credentials.properties This file contains a secret, and is not installed by our Nix derivation!</description>
    </item>
    <item>
      <title>Configuring Git for literate programming</title>
      <link>https://rossabaker.com/configs/git-repository/</link>
      <pubDate>Wed, 24 Aug 2022 15:04:00 +0000</pubDate>
      <guid>https://rossabaker.com/configs/git-repository/</guid>
      <description>My personal Git repository, Cromulent, contains the source for various projects, such as configurations and the contents of this website.&#xA;Due to literate programming, much of the source code &amp;ldquo;weaves&amp;rdquo; code and documentation in Org. Most tools aren&amp;rsquo;t Org interpreters, so the Org must be &amp;ldquo;tangled&amp;rdquo;Â 1 back into separate files for general consumption. This process requires a bit of extra care around Git.&#xA;Three types of files # Original sources # Original sources are the minimal set of files that can&amp;rsquo;t be derived from other sources as part of the build process.</description>
    </item>
  </channel>
</rss>
